#!/usr/bin/expect -f
#
# Play game Cragne Manor.
#
# Based on http://plover.net/~davidw/sol/c/cragn18.html
#
set timeout -1

# Remove previous log, if any.
system rm -f "game.log"
log_file "game.log"

# Start the game.
spawn ./glulxe cragne.gblorb
match_max 100000

expect "press any key to continue"; send "\r"
expect "yes or no"; send "yes\r"
expect "yes or no"; send "yes\r"
expect "press any key to begin"; send "\r"

#
# Drinking Fountain (Lucian Smith)
#
# Just find the secondary fountain for now. Obtain the hidden library book later.
#
expect ">"; send "restore\r"; expect ":"; send "drinking-fountain\r"

expect ">"; send "x fountain\r"
expect ">"; send "x button\r"
expect ">"; send "push it\r"
expect ">"; send "x ivy\r"
expect ">"; send "move ivy\r"
expect ">"; send "x secondary\r"
expect ">"; send "x sign\r";                        # "COLORED"
expect ">"; send "push rusty button\r"
expect ">"; send "x coffee\r";                      # Come back later
expect ">"; send "ne\r";                            # Town square, Backwater, VT
expect ">"; send "se\r";                            # River Walk

#
# River Walk (Adam Whybray)
#
# Goal: Obtain the employee card.
#
expect ">"; send "read sign\r"
expect ">"; send "x river\r"
expect ">"; send "x buoy\r"
expect ">"; send "x ash\r"
expect ">"; send "x rock\r"
expect ">"; send "take it\r"
expect ">"; send "x pole\r"
expect ">"; send "take it\r"
expect ">"; send "x crawfish\r"
expect ">"; send "x soggy tome\r"
expect ">"; send "take it\r"
expect ">"; send "read it\r"
expect ">"; send "fish river\r";                    # You find a freshwater lobster trap
expect ">"; send "x trap\r"
expect ">"; send "x employee card\r";               # "Veeder, R."
expect ">"; send "x eggbound\r"
expect ">"; send "kill dying crawfish with rock\r"
expect ">"; send "take shard\r"
expect ">"; send "x it\r"
expect ">"; send "cut twine with shard\r"
expect ">"; send "take employee card\r"
expect ">"; send "x coffee\r";                      # You're done here
expect ">"; send "put soggy tome in bp\r"
expect ">"; send "put employee card in mp\r"
expect ">"; send "put rock, pole, shard in tp\r"
expect ">"; send "north\r";                         # Under the Bridge

#
# Under the Bridge (Tenth)
#
# Goal: Learn that the Croceate Alderman's familiar is an eel. Open the hatch later.
#
expect ">"; send "x bridge\r"
expect ">"; send "x river\r"
expect ">"; send "x figure\r"
expect ">"; send "x hatch\r"
expect ">"; send "x indentation\r"
expect ">"; send "x payphone\r"
expect ">"; send "read graffiti\r"
expect ">"; send "again\r"
expect ">"; send "again\r"
expect ">"; send "again\r"
expect ">"; send "again\r"
expect ">"; send "again\r"
expect ">"; send "again\r"
expect ">"; send "again\r"
expect ">"; send "again\r"
expect ">"; send "again\r";                         # 258-0987 with stars
expect ">"; send "x coin return\r"
expect ">"; send "x coin slot\r"
expect ">"; send "x receiver\r"
expect ">"; send "x keypad\r"
expect ">"; send "push coin return\r";              # You get a quarter
expect ">"; send "x quarter\r"
expect ">"; send "put quarter in coin slot\r"
expect ">"; send "take receiver\r"
expect ">"; send "dial 911\r"
expect ">"; send "hang up\r"
expect ">"; send "x coin return\r"
expect ">"; send "push return\r"
expect ">"; send "put quarter in slot\r"
expect ">"; send "take receiver\r"
expect ">"; send "dial 258-0987\r"
expect ">"; send "x river\r"
expect ">"; send "again\r"
expect ">"; send "again\r"

# Note the new mural has an eel-creature, the word "Croceate", and the phrase "Variegated Court".

expect ">"; send "x coffee\r";                      # Come back later
expect ">"; send "south\r";                         # River Walk
expect ">"; send "x schedule\r"
expect ">"; send "wait for brown line\r";           # Railway Platform

#
# Railway Platform (Naomi Hinchen)
#
# Goal: Obtain the golden eyepiece.
#
expect ">"; send "unlock locker with employee card\r";  # Success!
expect ">"; send "put employee card in tp\r"
expect ">"; send "take suitcase\r"
expect ">"; send "x it\r";                              # It's Peter's. Has 4-digit combo lock
expect ">"; send "read inscription\r";                  # of wristwatch: "March 19th"
expect ">"; send "set lock to 0319\r";                  # It opens
expect ">"; send "put watch in tp\r"
expect ">"; send "open suitcase\r"
expect ">"; send "x box\r";                             # Image of train on top
expect ">"; send "take box\r"
expect ">"; send "put suitcase in tp\r"

# Remember the schedule board?

expect ">"; send "x schedule board\r"
expect ">"; send "stand on bench\r"
expect ">"; send "put winding key in clock\r"
expect ">"; send "set clock to 13:37\r";                # Train rushes past and the box opens
expect ">"; send "put winding key in kp\r"
expect ">"; send "stand\r"
expect ">"; send "x coin\r"
expect ">"; send "take coin\r"
expect ">"; send "put box in tp\r"
expect ">"; send "put coin in coin slot\r"
expect ">"; send "take bubble\r"
expect ">"; send "open bubble\r"
expect ">"; send "take eyepiece\r"
expect ">"; send "put bubble in tp\r"
expect ">"; send "x eyepiece\r"
expect ">"; send "wear it\r";                           # It just falls off
expect ">"; send "put rectangular battery in eyepiece\r"; # It fits!
expect ">"; send "push round button\r";                 # It turns on
expect ">"; send "push triangular button\r";            # It projects light?
expect ">"; send "wear eyepiece\r";                     # It clamps on. Your vision is improved, but how?

# Do you remember how many things looked "odd" at the well? Go back there.

expect ">"; send "wait for green line\r";               # The Old Well

#
# The Old Well (Reed Lockwood)
#
# Goal: Open the well.
#

# The eyepiece lets you see four arches in the puddle: wooden, teal, violet, and sky blue.

expect ">"; send "x puddle\r";                          # You see wooden, teal, violet, and sky blue arches
expect ">"; send "x wooden arch\r";                     # In the ocean
expect ">"; send "x teal arch\r";                       # Connects the ocean to a forest
expect ">"; send "x violet arch\r";                     # Connects the ocean to a labyrinth
expect ">"; send "x sky blue arch\r";                   # Connects the ocean to a plain
expect ">"; send "enter wooden arch\r";                 # Too small

# The game suggests prodding the arch with the laser on your eyepiece.

expect ">"; send "prod wooden arch\r"

# The game tells you that "P" can be used as an abbreviation for "PROD".

expect ">"; send "x brick\r";                           # The labyrinth has wooden, marigold, violet, and pink arches
expect ">"; send "x marigold arch\r";                   # Connects the labyrinth to the forest
expect ">"; send "x pink arch\r";                       # Connects the labyrinth to the plain
expect ">"; send "x quartz\r";                          # The plain has wooden, mint green, pink, and sky blue arches, plus a machine and a pool of fluid
expect ">"; send "x mint green arch\r";                 # Connects the plain to the forest
expect ">"; send "x machine\r";                         # A dispenser of some kind
expect ">"; send "x fluid\r"
expect ">"; send "x root\r";                            # The forest has wooden, marigold, teal, and mint green arches
expect ">"; send "x arches\r";                          # Summary of what connects to what
expect "violet"
expect "labyrinth"

# You may wish to re-read the moldy journal before proceeding:

expect ">"; send "open bp\r"
expect ">"; send "read moldy journal\r"
expect "disappointed"
expect ">"; send "put it in bp\r"
expect ">"; send "close bp\r"

# After reviewing the moldy journal, we should have a slightly
# better idea of what we're doing here: summoning creatures.
# They start from the machine and must go through three of the
# habitats before summoned into our world via the sigil.

# At least seven of the creatures are docile, but you can be
# sure that the others are either hostile or indifferent. And one
# creature creates glue? Its sequence is FOREST-unknown-CLIFFS;
# we should try to summon that one.

expect ">"; send "prod machine\r";                      # An egg falls into the pool, becoming a small blob
expect ">"; send "x blob\r"
expect ">"; send "prod blob\r";                         # The heat kills it. Oops
expect ">"; send "prod machine\r";                      # A new blob
expect ">"; send "prod mint\r";                         # The blob goes to forest and becomes a small quadruped
expect ">"; send "prod teal\r";                         # The quadruped goes to ocean and becomes a bumpy whale
expect ">"; send "prod violet\r";                       # The whale goes to labyrinth and becomes a armored climber
expect ">"; send "prod wooden\r";                       # A great, armor-plated monster emerges from the sigil and stomps off

# With our first summons, the game tells us some new commands:
# BIRTH, FOREST, PLAIN, CLIFFS, OCEAN, and SUMMON.

# This is much easier. We can stop worrying about which arch is which.

expect ">"; send "birth\r"
expect ">"; send "forest\r"
expect ">"; send "plain\r"
expect ">"; send "cliffs\r"
expect ">"; send "summon\r"

# A cycloptic ape leaves some sticky goo behind on the well. Don't touch the goo!

expect ">"; send "x well\r"

# There are 27 different possible creatures you can summon; see
# the well puzzle for a summary.

# To actually solve this puzzle, you need to first summon three
# friendly creatures that will stay here to defend you, then
# summon that terrible lizard-bird the moldy journal mentioned.

# First, let's summon a hallucinogenic worm:

expect ">"; send "birth. cliffs. ocean. forest. summon. x worm\r"

# Second, a comfy snake:

expect ">"; send "birth. cliffs. plains. forest. summon. x snake\r"

# Third, a perfumed land octopus:

expect ">"; send "birth. ocean. cliffs. forest. summon. x octopus\r"

# Finally, with goo on the well cap and with three friends, it's time to summon the fearsome pteranodon:

expect ">"; send "birth. forest. cliffs. ocean. summon\r"

# The giant bird opens the well cap and flies away.
# Also, your eyepiece is damaged and falls off.

expect ">"; send "take eyepiece. x it. put it in tp\r"
expect ">"; send "x coffee\r";                          # You're done here
expect ">"; send "down\r";                              # Circular Room

#
# Circular Room (JP)
#
# Just grab the wad of cash.
#
expect ">"; send "x cash\r"
expect ">"; send "x stones\r"
expect ">"; send "take cash. put cash in mp\r"
expect ">"; send "x coffee\r";                          # You're done here
expect ">"; send "up\r";                                # The Old Well
expect ">"; send "wait for blue line\r";                # Outside the Library
expect ">"; send "south\r";                             # Town square, Backwater, VT
expect ">"; send "east\r";                              # Bridge

#
# Bridge (Daniel Stelzer and Jemma Briggeman)
#
# Goal: Repair the bridge.
#
expect ">"; send "save\r"; expect ":"; send "bridge\r"

# Quit
expect ">"; send "quit\r"
#expect "QUIT"; send "quit\r"
exit
